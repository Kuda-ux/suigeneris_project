version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: suigeneris-postgres
    environment:
      POSTGRES_DB: suigeneris_store
      POSTGRES_USER: suigeneris
      POSTGRES_PASSWORD: suigeneris_dev_2024
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - suigeneris-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U suigeneris -d suigeneris_store"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: suigeneris-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - suigeneris-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Meilisearch
  meilisearch:
    image: getmeili/meilisearch:v1.5
    container_name: suigeneris-meilisearch
    environment:
      MEILI_MASTER_KEY: suigeneris_meili_master_key_dev
      MEILI_ENV: development
    ports:
      - "7700:7700"
    volumes:
      - meilisearch_data:/meili_data
    networks:
      - suigeneris-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO (S3-compatible storage)
  minio:
    image: minio/minio:latest
    container_name: suigeneris-minio
    environment:
      MINIO_ROOT_USER: suigeneris
      MINIO_ROOT_PASSWORD: suigeneris_minio_dev
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - suigeneris-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Create MinIO bucket
  minio-setup:
    image: minio/mc:latest
    container_name: suigeneris-minio-setup
    depends_on:
      - minio
    networks:
      - suigeneris-network
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set minio http://minio:9000 suigeneris suigeneris_minio_dev;
      /usr/bin/mc mb minio/suigeneris-store --ignore-existing;
      /usr/bin/mc policy set public minio/suigeneris-store;
      exit 0;
      "

volumes:
  postgres_data:
  redis_data:
  meilisearch_data:
  minio_data:

networks:
  suigeneris-network:
    driver: bridge
